When would you want to use a remote repository rather than keeping all your work local?

	Mainly, when collaborating with a team. But it is also useful to keep your work safe in case
	you computer/hard drive breaks and to keep your work organised. Also, you might want to share 
	your project with the public, to help others, to be helped by others and/or to contribute to 
	the open source community.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

	Pulling changes from remote repositories is great, but it can also break your code, so, you
	probably want to update from a remote repo whenever you are ready to receive those changes
	and resolve any possible conflict resulting from the update/sync process.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

	A fork is a duplicate of someone's repository into your own GitHub account. It keeps a 
	reference to the original repository, indicating that it was splitted from that repository 
	at a certain point in time. This is done when you can't or don't want to modify that original repository,
	you create a copy for yourself and adapt your copy of the repo to your needs.

	Clone command allows to create a local copy of a specific, remote, repository. It is usually done
	when one wants to work with a repository and plans on sending changes back to the cloned repository.

	Branches provide a way of keeping a log of a series of commits, enabling commits comparison and also
	allowing to go 'back in time' to investigate bugs or reverting changes. With branches it's also possible
	to unify changes done in another branch and uploading (pushing) changes to a remote repository, this is particularly helpful for collaboration.

What is the benefit of having a copy of the last known state of the remote stored locally?

	This way, if you are offline, you can diff with the last known state of the remote or if you have finished working on some feature you can also merge your changes and resolve any conflict that might arise. Then, whenever you are online again, you can push your changes to the remote or repeat the process with less changes if there are more changes that need to be merged on the remote.